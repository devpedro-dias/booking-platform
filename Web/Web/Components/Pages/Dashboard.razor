@page "/dashboard"

@rendermode InteractiveAuto

<RadzenText TextStyle="TextStyle.H6">
    Dashboard
</RadzenText>
<RadzenRow JustifyContent="JustifyContent.Center">
    <RadzenColumn Size="12" SizeMD="4">
        <RadzenCard Variant="Variant.Outlined">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                <RadzenCard Class="rz-background-color-info-lighter rz-p-2" Style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;" Variant="Variant.Flat">
                    <RadzenIcon Icon="event" Style="font-size: 26px; color: var(--rz-primary);" />
                </RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" Class="rz-ml-3">
                    <RadzenText Text="Appointments" TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" />
                    <RadzenText Text="1.234" TextStyle="TextStyle.Body1" Class="rz-mt-0" />
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Size="12" SizeMD="4">
        <RadzenCard Variant="Variant.Outlined">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                <RadzenCard Class="rz-background-color-info-lighter rz-p-2" Style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;" Variant="Variant.Flat">
                    <RadzenIcon Icon="business" Style="font-size: 26px; color: var(--rz-primary);" />
                </RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" Class="rz-ml-3">
                    <RadzenText Text="Businesses" TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" />
                    <RadzenText Text="567" TextStyle="TextStyle.Body1" Class="rz-mt-0" />
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Size="12" SizeMD="4">
        <RadzenCard Variant="Variant.Outlined">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                <RadzenCard Class="rz-background-color-info-lighter rz-p-2" Style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;" Variant="Variant.Flat">
                    <RadzenIcon Icon="people" Style="font-size: 26px; color: var(--rz-primary);" />
                </RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" Class="rz-ml-3">
                    <RadzenText Text="Service Providers" TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" />
                    <RadzenText Text="89" TextStyle="TextStyle.Body1" Class="rz-mt-0" />
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="JustifyContent.Center" class="mt-3">
    <RadzenColumn Size="12">
        <ChartDashboard />
    </RadzenColumn>

    <RadzenCard Variant="Variant.Outlined">
        <RadzenColumn Size="12">
            <RadzenText TextStyle="TextStyle.H6" Class="rz-mb-3">
                Upcoming Appointments
            </RadzenText>
            <AppointmentsTable Appointments="@appointments"
                               AllowFiltering="false"
                               AllowPaging="true"
                               PageSize="3"
                               AllowSorting="false"
                               ShowActions="false"
                               ShowRowNumber="false" />
        </RadzenColumn>
    </RadzenCard>
</RadzenRow>


@code {
    List<AppointmentResponseDTO> appointments;

    protected override async Task OnInitializedAsync()
    {
        // Simulação de dados para o dashboard - pode ser os mesmos da página de appointments
        // ou uma versão resumida/filtrada, por exemplo, apenas os próximos 5 appointments.
        appointments = new List<AppointmentResponseDTO>
        {
            new AppointmentResponseDTO
            {
                Id = Guid.NewGuid().ToString(),
                BusinessId = Guid.NewGuid().ToString(),
                CustomerId = "customer123",
                ServiceId = Guid.NewGuid().ToString(),
                ServiceProviderId = Guid.NewGuid().ToString(),
                StartDateTime = DateTime.Now.AddHours(1),
                EndDateTime = DateTime.Now.AddHours(2),
                TotalPriceInCents = 15000,
                Status = "Confirmed",
                CreatedAt = DateTime.Now.AddDays(-5)
            },
            new AppointmentResponseDTO
            {
                Id = Guid.NewGuid().ToString(),
                BusinessId = Guid.NewGuid().ToString(),
                CustomerId = "customer456",
                ServiceId = Guid.NewGuid().ToString(),
                ServiceProviderId = Guid.NewGuid().ToString(),
                StartDateTime = DateTime.Now.AddDays(1).AddHours(10),
                EndDateTime = DateTime.Now.AddDays(1).AddHours(11),
                TotalPriceInCents = 8000,
                Status = "Pending",
                CreatedAt = DateTime.Now.AddDays(-2)
            },
            new AppointmentResponseDTO
            {
                Id = Guid.NewGuid().ToString(),
                BusinessId = Guid.NewGuid().ToString(),
                CustomerId = "customer789",
                ServiceId = Guid.NewGuid().ToString(),
                ServiceProviderId = Guid.NewGuid().ToString(),
                StartDateTime = DateTime.Now.AddDays(-2).AddHours(14),
                EndDateTime = DateTime.Now.AddDays(-2).AddHours(15),
                TotalPriceInCents = 25000,
                Status = "Completed",
                CreatedAt = DateTime.Now.AddDays(-10)
            }
        };

        // Você provavelmente buscará apenas os "próximos" ou "recentes" appointments para o dashboard
        // Exemplo: appointments = (await AppointmentService.GetRecentAppointmentsAsync(5)).ToList();
    }


    class AppointmentData
    {
        public string Month { get; set; }
        public int Count { get; set; }
    }

    List<AppointmentData> appointmentsData = new List<AppointmentData>
    {
        new AppointmentData { Month = "Jan", Count = 150 },
        new AppointmentData { Month = "Fev", Count = 200 },
        new AppointmentData { Month = "Mar", Count = 180 },
        new AppointmentData { Month = "Abr", Count = 250 },
        new AppointmentData { Month = "Mai", Count = 220 },
        new AppointmentData { Month = "Jun", Count = 300 },
        new AppointmentData { Month = "Jul", Count = 280 }
    };
}